Lint_task:
  container:
    cpu: 1
    memory: 512Mi
    image: python:3-slim
  install_script:
    - pip3 install -U .[lint]
  script:
    - bork run lint

Linux_task:
  alias: Linux tests
  allow_failures: $CIRRUS_TASK_NAME =~ '.*-rc-.*'
  container:
    cpu: 1
    memory: 512Mi
    matrix:
      - image: python:3.10-slim
      - image: python:3.11-slim
      - image: python:3.12-slim
      - image: python:3.13-slim
  install_script:
    - pip3 install -U .[test]
  script:
    - python3 --version
    - pytest --verbose

macOS_task:
  alias: macOS tests
  macos_instance:
    image: ghcr.io/cirruslabs/macos-runner:sonoma
  env:
    PATH: ${HOME}/.pyenv/shims:${PATH}
    PYTHON: 3:latest
  brew_update_script:
    - brew update
  brew_install_script:
    # Per the pyenv homebrew recommendations.
    #  https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    - brew install openssl readline sqlite3 xz zlib pyenv git
  pyenv_install_script:
    - pyenv install ${PYTHON}
    - pyenv global 3
    - pyenv rehash
  pip_install_script:
    - pip install -U --upgrade-strategy eager pip 'setuptools>61'
    - pip install .[test]
  script:
    - python3 --version
    - pytest --verbose

FreeBSD_task:
  alias: FreeBSD tests
  freebsd_instance:
    image_family: freebsd-14-2
  env:
    matrix:
      - PYTHON: 3.10
      - PYTHON: 3.11
  install_script:
    - PY=`echo $PYTHON | tr -d '.'`
    - pkg install -y python${PY} py${PY}-setuptools
    - python${PYTHON} -m ensurepip --upgrade
    - python${PYTHON} -m pip install -U 'pip>=19' # Hard requirement for no setup.py.
    - python${PYTHON} -m pip install .[test]
  script:
    - python${PYTHON} --version
    - pytest --verbose

Windows_task:
  alias: Windows tests
  windows_container:
    image: cirrusci/windowsservercore:2019
  env:
    matrix:
      - PYTHON: 3.9.13
      - PYTHON: 3.10.9
      - PYTHON: 3.11.8
      - PYTHON: 3.12.2
  python_install_script:
    # https://docs.python.org/3.6/using/windows.html#installing-without-ui
    - ps: Invoke-WebRequest -Uri https://www.python.org/ftp/python/${env:PYTHON}/python-${env:PYTHON}-amd64.exe -OutFile C:\python-installer.exe
    - C:\python-installer.exe /quiet TargetDir=C:\Python SimpleInstall=1
  install_script:
    - C:\Python\python.exe -m pip install -U pip
    - C:\Python\python.exe -m pip install -e .[test]
  version_info_script:
    - C:\Python\python.exe --version
    - C:\Python\python.exe -m pip --version
  test_script:
    - C:\Python\python.exe -m pytest --verbose


# Meta-task which depends on every other test/lint task to finish.
success_task:
  name: CI success
  container: {image: "busybox"}
  script: "exit 0"
  depends_on:
    - Lint
    - FreeBSD tests
    - Linux tests
    - macOS tests
    - Windows tests

# If the `version` file is modified on the main branch, make a release.
Release_task:
  only_if: "changesInclude('emanate/version.py') && $BRANCH == 'main' && $CIRRUS_CRON == ''"
  depends_on: [CI success]
  env:
    BORK_PYPI_USERNAME: "__token__"
    BORK_PYPI_PASSWORD: ENCRYPTED[93940c854f7cb146391fdb3ef75ab7f8e229e83837f49fbcb52472bcf3f1d0265ed8629fd57204152e019af4c6b9354c]
    BORK_GITHUB_TOKEN: ENCRYPTED[f9e27463821d9631bfb0812468c644a99bfcabf4bfb69623ff8a7245e787541203ea9b29b65928f5c851f3ad17ec66b2]
  container:
    image: python:3-slim
  install_script:
    - apt-get update
    - apt-get install -y git
    - pip3 install . .[test]
  build_script:
    - bork clean
    - bork build
  test_script:
    - bork run test
  release_script:
    - bork release
